From 768f606cd3cd37c235e85225127201a42d272946 Mon Sep 17 00:00:00 2001
From: Joni Poikelin <joni.poikelin@qt.io>
Date: Thu, 17 Aug 2017 09:49:25 +0300
Subject: Fix memory leaks with threaded renderer

Reverts 39061af50cc3092289cdd71d17802139590ecb59 and calls endSync()
instead after syncSceneGraph().

Task-number: QTBUG-61754
Change-Id: I7b51ffdc93557bacd93927dd642ec3715980b21c
Reviewed-by: Laszlo Agocs <laszlo.agocs@qt.io>
Reviewed-by: Roger Zanoni <rogerzanoni@gmail.com>
---
 src/quick/scenegraph/qsgthreadedrenderloop.cpp | 1 +
 src/quick/scenegraph/util/qsgatlastexture.cpp  | 7 +++----
 src/quick/scenegraph/util/qsgatlastexture_p.h  | 2 +-
 3 files changed, 5 insertions(+), 5 deletions(-)

diff --git a/src/quick/scenegraph/qsgthreadedrenderloop.cpp b/src/quick/scenegraph/qsgthreadedrenderloop.cpp
index 3a8e673c0..d28a73da2 100644
--- a/src/quick/scenegraph/qsgthreadedrenderloop.cpp
+++ b/src/quick/scenegraph/qsgthreadedrenderloop.cpp
@@ -553,6 +553,7 @@ void QSGRenderThread::sync(bool inExpose)
         if (d->renderer)
             d->renderer->clearChangedFlag();
         d->syncSceneGraph();
+        sgrc->endSync();
         if (!hadRenderer && d->renderer) {
             qCDebug(QSG_LOG_RENDERLOOP) << QSG_RT_PAD << "- renderer was created";
             syncResultedInChanges = true;
diff --git a/src/quick/scenegraph/util/qsgatlastexture.cpp b/src/quick/scenegraph/util/qsgatlastexture.cpp
index d5f836a52..22f0b13f4 100644
--- a/src/quick/scenegraph/util/qsgatlastexture.cpp
+++ b/src/quick/scenegraph/util/qsgatlastexture.cpp
@@ -116,7 +116,7 @@ QSGTexture *Manager::create(const QImage &image, bool hasAlphaChannel)
     Texture *t = 0;
     if (image.width() < m_atlas_size_limit && image.height() < m_atlas_size_limit) {
         if (!m_atlas)
-            m_atlas = new Atlas(m_atlas_size, this);
+            m_atlas = new Atlas(m_atlas_size);
         // t may be null for atlas allocation failure
         t = m_atlas->create(image);
         if (t && !hasAlphaChannel && t->hasAlphaChannel())
@@ -125,9 +125,8 @@ QSGTexture *Manager::create(const QImage &image, bool hasAlphaChannel)
     return t;
 }
 
-Atlas::Atlas(const QSize &size, QObject *parent)
-    : QObject(parent)
-    , m_allocator(size)
+Atlas::Atlas(const QSize &size)
+    : m_allocator(size)
     , m_texture_id(0)
     , m_size(size)
     , m_atlas_transient_image_threshold(0)
diff --git a/src/quick/scenegraph/util/qsgatlastexture_p.h b/src/quick/scenegraph/util/qsgatlastexture_p.h
index 0bb07e8e8..3dee53954 100644
--- a/src/quick/scenegraph/util/qsgatlastexture_p.h
+++ b/src/quick/scenegraph/util/qsgatlastexture_p.h
@@ -88,7 +88,7 @@ private:
 class Atlas : public QObject
 {
 public:
-    Atlas(const QSize &size, QObject *parent);
+    Atlas(const QSize &size);
     ~Atlas();
 
     void invalidate();
-- 
cgit v1.1-6-g87c4

