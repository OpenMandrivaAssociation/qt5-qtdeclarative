--- qtdeclarative-opensource-src-5.8.0-rc/src/quick/scenegraph/qsgdefaultdistancefieldglyphcache.cpp.0005~	2016-12-09 13:14:10.000000000 +0100
+++ qtdeclarative-opensource-src-5.8.0-rc/src/quick/scenegraph/qsgdefaultdistancefieldglyphcache.cpp	2016-12-24 16:16:21.691982490 +0100
@@ -499,9 +499,11 @@ bool QSGDefaultDistanceFieldGlyphCache::
     static bool set = false;
     static bool useWorkaround = false;
     if (!set) {
-        useWorkaround = qstrcmp(reinterpret_cast<const char*>(m_funcs->glGetString(GL_RENDERER)),
-                                "Mali-400 MP") == 0;
-        set = true;
+        const char *renderer = reinterpret_cast<const char*>(m_funcs->glGetString(GL_RENDERER));
+        if (renderer) {
+            useWorkaround = qstrcmp(renderer, "Mali-400 MP") == 0;
+            set = true;
+        }
     }
     return useWorkaround;
 }
--- qtdeclarative-opensource-src-5.8.0-rc/src/quick/scenegraph/qsgdefaultrendercontext.cpp.0005~	2016-12-09 13:14:10.000000000 +0100
+++ qtdeclarative-opensource-src-5.8.0-rc/src/quick/scenegraph/qsgdefaultrendercontext.cpp	2016-12-24 16:16:21.691982490 +0100
@@ -98,14 +98,22 @@ void QSGDefaultRenderContext::initialize
     m_sg->renderContextInitialized(this);
 
 #ifdef Q_OS_LINUX
+    while (funcs->glGetError() != GL_NO_ERROR);
+
     const char *vendor = (const char *) funcs->glGetString(GL_VENDOR);
-    if (vendor && strstr(vendor, "nouveau"))
-        m_brokenIBOs = true;
     const char *renderer = (const char *) funcs->glGetString(GL_RENDERER);
-    if (renderer && strstr(renderer, "llvmpipe"))
-        m_serializedRender = true;
-    if (vendor && renderer && strstr(vendor, "Hisilicon Technologies") && strstr(renderer, "Immersion.16"))
-        m_brokenIBOs = true;
+    if (vendor && renderer) {
+        if (strstr(vendor, "nouveau"))
+            m_brokenIBOs = true;
+        if (strstr(renderer, "llvmpipe"))
+            m_serializedRender = true;
+        if (strstr(vendor, "Hisilicon Technologies") && strstr(renderer, "Immersion.16"))
+            m_brokenIBOs = true;
+    } else {
+        GLenum err;
+        while ((err = funcs->glGetError()) != GL_NO_ERROR)
+            qWarning("QSGRenderContext::initialize: GL error %x from glGetString", err);
+    }
 #endif
 
     emit initialized();
